---
# ============================================================================
# Nerd Fonts Management - Enhanced for Multi-Framework Support
# ============================================================================

- name: Debug - Fonts role started
  ansible.builtin.debug:
    msg: |
      Fonts role executing:
      - Fonts to install: {{ nerd_fonts_to_install | default('none specified') }}
      - Install all fonts: {{ install_all_fonts | default(false) }}
      - Framework: {{ prompt_framework | default('none') }}

# ============================================================================
# Framework-Specific Font Recommendations
# ============================================================================
- name: Set recommended_fonts based on framework
  ansible.builtin.set_fact:
    fonts_recommended_fonts: |
      {%- if prompt_framework == 'p10k' -%}
      ['MesloLGS', 'Hack', 'FiraCode', 'CascadiaCode']
      {%- elif prompt_framework == 'starship' -%}
      ['JetBrainsMono', 'FiraCode', 'CascadiaCode', 'Hack']
      {%- elif prompt_framework == 'oh-my-posh' -%}
      ['CascadiaCode', 'JetBrainsMono', 'FiraCode', 'Hack']
      {%- elif prompt_framework == 'spaceship' -%}
      ['FiraCode', 'JetBrainsMono', 'Hack', 'CascadiaCode']
      {%- else -%}
      ['JetBrainsMono', 'FiraCode', 'CascadiaCode']
      {%- endif -%}

- name: Display framework-specific font recommendations
  ansible.builtin.debug:
    msg: |
      Recommended fonts for {{ prompt_framework | default('your setup') }}:
      {% for font in fonts_recommended_fonts %}
      - {{ font }} Nerd Font
      {% endfor %}

      These fonts provide the best symbol and icon support for your chosen framework.

# ============================================================================
# Font Management Script Integration
# ============================================================================
- name: Check if font management script exists
  ansible.builtin.stat:
    path: "{{ playbook_dir }}/../manage_fonts.sh"
  register: fonts_script
  delegate_to: localhost

- name: Fail if font script not found
  ansible.builtin.fail:
    msg: |
      Font management script not found at {{ playbook_dir }}/../manage_fonts.sh

      Please ensure manage_fonts.sh is in the project root directory.
      This script is required for Nerd Font installation.
  when: not fonts_script.stat.exists

- name: Make font management script executable
  ansible.builtin.file:
    path: "{{ playbook_dir }}/../manage_fonts.sh"
    mode: '0755'
  delegate_to: localhost

# ============================================================================
# Install Fonts Based on Configuration
# ============================================================================

# Install specific fonts if listed
- name: Install specified Nerd Fonts
  ansible.builtin.shell: |
    cd {{ playbook_dir }}/..
    ./manage_fonts.sh --ansible install {{ nerd_fonts_to_install | join(' ') }}
  register: fonts_install_result
  when:
    - nerd_fonts_to_install is defined
    - nerd_fonts_to_install | length > 0
    - not (install_all_fonts | default(false))
  changed_when: "'✓' in fonts_install_result.stdout or 'installed' in fonts_install_result.stdout"
  failed_when: "'Error:' in fonts_install_result.stderr"

# Install all fonts if requested
- name: Install all available Nerd Fonts
  ansible.builtin.shell: |
    cd {{ playbook_dir }}/..
    ./manage_fonts.sh --ansible install all
  register: fonts_install_all_result
  when:
    - install_all_fonts | default(false) | bool
  changed_when: "'✓' in fonts_install_all_result.stdout or 'installed' in fonts_install_all_result.stdout"
  failed_when: "'Error:' in fonts_install_all_result.stderr"

# Install recommended fonts if no specific selection
- name: Install recommended fonts for framework
  ansible.builtin.shell: |
    cd {{ playbook_dir }}/..
    ./manage_fonts.sh --ansible install {{ fonts_recommended_fonts | join(' ') }}
  register: fonts_install_recommended_result
  when:
    - nerd_fonts_to_install is not defined or nerd_fonts_to_install | length == 0
    - not (install_all_fonts | default(false))
    - prompt_framework is defined
  changed_when: "'✓' in fonts_install_recommended_result.stdout or 'installed' in fonts_install_recommended_result.stdout"
  failed_when: "'Error:' in fonts_install_recommended_result.stderr"

# ============================================================================
# Font Installation Verification
# ============================================================================
- name: Get fonts installation status
  ansible.builtin.shell: |
    cd {{ playbook_dir }}/..
    ./manage_fonts.sh --ansible status
  register: fonts_status
  changed_when: false
  failed_when: false

- name: Display font installation results
  ansible.builtin.debug:
    msg: |
      Font Installation Summary:
      {{ fonts_status.stdout_lines | join('\n') }}

      {% if prompt_framework == 'p10k' %}
      For Powerlevel10k: Restart your terminal and run 'p10k configure' to test the fonts.
      {% elif prompt_framework == 'starship' %}
      For Starship: Restart your terminal to see the new icons and symbols.
      {% elif prompt_framework == 'oh-my-posh' %}
      For Oh My Posh: Restart your terminal and configure your theme to use the new fonts.
      {% else %}
      Restart your terminal to see the new fonts in action.
      {% endif %}
  when: fonts_status is defined

# ============================================================================
# Framework-Specific Font Configuration
# ============================================================================
- name: Create framework-specific font configuration notice
  ansible.builtin.template:
    src: font-setup-notice.md.j2
    dest: "{{ user_home }}/.config/font-setup-{{ prompt_framework }}.md"
    mode: '0644'
  become: false
  when: prompt_framework is defined

# ============================================================================
# Font Cache Refresh
# ============================================================================
- name: Refresh font cache (Linux)
  ansible.builtin.command: fc-cache -f -v
  become: false
  when:
    - ansible_os_family == "Debian"
    - font_cache_refresh | default(true)
  changed_when: false

- name: Display font cache refresh notice (macOS)
  ansible.builtin.debug:
    msg: |
      Font cache on macOS refreshes automatically.
      If fonts don't appear immediately, try restarting your terminal application.
  when:
    - ansible_os_family == "Darwin"
    - font_cache_refresh | default(true)

# ============================================================================
# Error Handling and Troubleshooting
# ============================================================================
- name: Handle font installation errors
  block:
    - name: Check for common font installation issues
      ansible.builtin.debug:
        msg: |
          Font installation completed with warnings. Common troubleshooting steps:

          1. Restart your terminal application completely
          2. Check if your terminal supports the font:
             - Windows Terminal: Settings > Profiles > Appearance > Font face
             - iTerm2: Preferences > Profiles > Text > Font
             - GNOME Terminal: Preferences > Profiles > Text > Custom font

          3. Verify font installation:
             Linux: fc-list | grep -i "{{ fonts_recommended_fonts[0] }}"
             macOS: Font Book application

          4. If symbols still don't appear, your terminal may need a Nerd Font variant:
             - Try the "Mono" version for fixed-width requirements
             - Use "Propo" version for proportional spacing

      when:
        - fonts_install_result is defined and fonts_install_result.rc != 0
        - fonts_install_all_result is defined and fonts_install_all_result.rc != 0
        - fonts_install_recommended_result is defined and fonts_install_recommended_result.rc != 0

  rescue:
    - name: Font installation failure notice
      ansible.builtin.debug:
        msg: |
          ⚠️  Font installation encountered errors.

          Manual installation options:
          1. Download fonts from: https://www.nerdfonts.com/font-downloads
          2. Install recommended fonts: {{ fonts_recommended_fonts | join(', ') }}
          3. Configure your terminal to use a Nerd Font
          4. Restart your terminal application
          The shell setup will continue, but you may see missing symbols until fonts are installed.
